{"ast":null,"code":"var _jsxFileName = \"/Users/jaqqen/_Bachelor_container/_Testing_container/test_react_flask/shavas/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport \"./../static/App.css\";\nimport CanvasBlock from \"./CanvasBlock\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trainDrawings: [],\n      identifyerDrawing: null,\n      disableGenerateButton: false,\n      identifyerCanvas: false\n    };\n    this.appendDrawingToState = this.appendDrawingToState.bind(this);\n    this.sendDataToBackend = this.sendDataToBackend.bind(this);\n    this.setIdentifyerDrawing = this.setIdentifyerDrawing.bind(this);\n  }\n\n  appendDrawingToState(canvasDataURL) {\n    this.setState(prevState => ({\n      trainDrawings: [...prevState.trainDrawings, canvasDataURL]\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchClearDatalist();\n  }\n\n  componentDidUpdate() {\n    console.log('trainDrawings', this.state);\n  }\n\n  async fetchClearDatalist() {\n    // const response = await fetch('/clear_datalist');\n    // const awaitedRes = await response.json();\n    // if (response.ok) {\n    //   for (let i = 0; i < awaitedRes.length; i++) {\n    //     console.log('OK', awaitedRes[i]);\n    //   }\n    // } else {\n    //   console.log('ERROR', awaitedRes)\n    // }\n    await fetch('/clear_datalist').then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Something went wrong ...');\n      }\n    }).then(data => {\n      for (let i = 0; i < data.length; i++) {\n        console.log('OK', data[i]);\n      }\n    }).catch(error => console.log('Error', error));\n  }\n\n  async sendDataToBackend() {\n    if (!(this.state.trainDrawings.length > 1)) {\n      alert('Please set both drawings before generating data!');\n    }\n\n    const obj = {\n      'data0': this.state.trainDrawings[0],\n      'data1': this.state.trainDrawings[1],\n      'shape0': 'Shape 0',\n      'shape1': 'Shape 1'\n    };\n    await fetch('/send_canvas', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(obj)\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Something went wrong ...');\n      }\n    }).then(data => {\n      console.log('OK', data);\n      this.setState({\n        disableGenerateButton: true\n      }); // this.getSample();\n\n      this.generate();\n    }).catch(error => console.log('ERROR', error));\n  }\n\n  async generate() {\n    await fetch('/generate').then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        throw new Error('Something went wrong ...');\n      }\n    }).then(data => {\n      this.setState({\n        identifyerCanvas: true\n      });\n      console.log('OK', data);\n    }).catch(error => console.log('ERROR', error));\n  } // async getSample() {\n  //   await fetch('/getSample')\n  //     .then(response => {\n  //       if (response.ok) {\n  //         return response.json();\n  //       } else {\n  //         throw new Error('Something went wrong ...');\n  //       }\n  //     })\n  //     .then(data => {\n  //       console.log('OK', data);\n  //     })\n  //     .catch(error => console.log('ERROR', error))\n  // }\n\n\n  async identifyCanvasContent() {}\n\n  setIdentifyerDrawing(drawing) {\n    this.setState({\n      identifyerDrawing: drawing\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          disableGenerateButton = _this$state.disableGenerateButton,\n          trainDrawings = _this$state.trainDrawings,\n          identifyerCanvas = _this$state.identifyerCanvas;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"ShaVas\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(CanvasBlock, {\n      appendDrawingToState: this.appendDrawingToState,\n      identifyer: false,\n      idNumber: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(CanvasBlock, {\n      appendDrawingToState: this.appendDrawingToState,\n      identifyer: false,\n      idNumber: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"generateButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: disableGenerateButton,\n      type: \"button\",\n      onClick: this.sendDataToBackend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, disableGenerateButton === false ? trainDrawings.length === 2 ? identifyerCanvas === false ? 'Generate and train data!' : 'Computing - DONE' : 'Please set drawings!' : 'Generating, calculating...')), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), trainDrawings.length > 1 && identifyerCanvas ? React.createElement(\"div\", {\n      id: \"identifyer-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(CanvasBlock, {\n      setIdentifyerDrawing: this.setIdentifyerDrawing,\n      idNumber: 2,\n      identifyer: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })) : React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Please set both drawings before identification.\"));\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/jaqqen/_Bachelor_container/_Testing_container/test_react_flask/shavas/src/components/App.js"],"names":["React","Component","CanvasBlock","App","constructor","props","state","trainDrawings","identifyerDrawing","disableGenerateButton","identifyerCanvas","appendDrawingToState","bind","sendDataToBackend","setIdentifyerDrawing","canvasDataURL","setState","prevState","componentDidMount","fetchClearDatalist","componentDidUpdate","console","log","fetch","then","response","ok","json","Error","data","i","length","catch","error","alert","obj","method","headers","body","JSON","stringify","generate","identifyCanvasContent","drawing","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./../static/App.css\";\nimport CanvasBlock from \"./CanvasBlock\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trainDrawings: [],\n      identifyerDrawing: null,\n      disableGenerateButton: false,\n      identifyerCanvas: false,\n    };\n    this.appendDrawingToState = this.appendDrawingToState.bind(this);\n    this.sendDataToBackend = this.sendDataToBackend.bind(this);\n    this.setIdentifyerDrawing = this.setIdentifyerDrawing.bind(this);\n  }\n\n  appendDrawingToState(canvasDataURL) {\n    this.setState(prevState => ({\n      trainDrawings: [...prevState.trainDrawings, canvasDataURL]\n    }));\n  }\n\n  componentDidMount() {\n    this.fetchClearDatalist();\n  }\n\n  componentDidUpdate() {\n    console.log('trainDrawings', this.state);\n  }\n\n  async fetchClearDatalist() {\n    // const response = await fetch('/clear_datalist');\n    // const awaitedRes = await response.json();\n    // if (response.ok) {\n    //   for (let i = 0; i < awaitedRes.length; i++) {\n    //     console.log('OK', awaitedRes[i]);\n    //   }\n    // } else {\n    //   console.log('ERROR', awaitedRes)\n    // }\n    await fetch('/clear_datalist')\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Something went wrong ...');\n        }\n      })\n      .then(data => {\n        for (let i = 0; i < data.length; i++) {\n          console.log('OK', data[i]);\n        }\n      })\n      .catch(error => console.log('Error', error))\n  }\n\n  async sendDataToBackend() {\n    if (!(this.state.trainDrawings.length > 1)) {\n      alert('Please set both drawings before generating data!')\n    }\n\n    const obj = {\n      'data0': this.state.trainDrawings[0],\n      'data1': this.state.trainDrawings[1],\n      'shape0': 'Shape 0',\n      'shape1': 'Shape 1'\n    };\n\n    await fetch('/send_canvas', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(obj)\n    })\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Something went wrong ...');\n        }\n      })\n      .then(data => {\n        console.log('OK', data);\n        this.setState({\n          disableGenerateButton: true,\n        });\n        // this.getSample();\n        this.generate();\n      })\n      .catch(error => console.log('ERROR', error))\n  }\n\n  async generate() {\n    await fetch('/generate')\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          throw new Error('Something went wrong ...');\n        }\n      })\n      .then(data => {\n        this.setState({\n          identifyerCanvas: true,\n        })\n        console.log('OK', data);\n      })\n      .catch(error => console.log('ERROR', error))\n  }\n\n  // async getSample() {\n  //   await fetch('/getSample')\n  //     .then(response => {\n  //       if (response.ok) {\n  //         return response.json();\n  //       } else {\n  //         throw new Error('Something went wrong ...');\n  //       }\n  //     })\n  //     .then(data => {\n  //       console.log('OK', data);\n  //     })\n  //     .catch(error => console.log('ERROR', error))\n  // }\n\n  async identifyCanvasContent() {\n\n  }\n\n  setIdentifyerDrawing(drawing) {\n    this.setState({\n      identifyerDrawing: drawing,\n    });\n  }\n\n  render() {\n    const { disableGenerateButton, trainDrawings, identifyerCanvas } = this.state;\n\n    return (\n      <div>\n        <h1>ShaVas</h1>\n        <hr />\n        <div className=\"App\">\n          <CanvasBlock\n            appendDrawingToState={this.appendDrawingToState}\n            identifyer={false}\n            idNumber={0}\n          />\n          <CanvasBlock\n            appendDrawingToState={this.appendDrawingToState}\n            identifyer={false}\n            idNumber={1}\n          />\n        </div>\n        <div id=\"generateButton\">\n          <button disabled={disableGenerateButton} type='button' onClick={this.sendDataToBackend}>\n            {disableGenerateButton === false ?\n              trainDrawings.length === 2 ?\n                identifyerCanvas === false ? 'Generate and train data!' : 'Computing - DONE'\n                :\n                'Please set drawings!'\n              :\n              'Generating, calculating...'\n            }\n          </button>\n        </div>\n        <hr />\n        {trainDrawings.length > 1 && identifyerCanvas ?\n          <div id=\"identifyer-container\">\n            <CanvasBlock setIdentifyerDrawing={this.setIdentifyerDrawing} idNumber={2} identifyer={true}></CanvasBlock>\n          </div>\n          :\n          <h2>Please set both drawings before identification.</h2>\n        }\n      </div>\n    );\n  }\n};\n"]},"metadata":{},"sourceType":"module"}