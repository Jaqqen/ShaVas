{"ast":null,"code":"var _jsxFileName = \"/Users/jaqqen/ShaVas/frontend/src/components/CanvasBlock.js\";\nimport React, { Component } from \"react\";\nimport MyCanvas from \"../MyCanvas\";\nexport default class CanvasBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clearFunction: null\n    };\n    this.clearCanvasOnClick = this.clearCanvasOnClick.bind(this);\n  }\n\n  componentWillUnmount() {\n    console.log('CanvasBlock ' + this.props.idNumber + ' has unmounted');\n  }\n\n  clearCanvasOnClick(clearFunc) {\n    this.setState({\n      clearFunction: clearFunc\n    });\n  }\n\n  render() {\n    const props = this.props;\n    return React.createElement(\"div\", {\n      className: \"canvas-block-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Shape \", props.isIdentifyBlock ? 'to identify' : props.idNumber), React.createElement(MyCanvas, {\n      _dimensions: props.canvasDimensions,\n      constructionCompleted: props.constructionCompleted,\n      getRootStateWhenMyCanvasUnmount: props.getRootStateWhenMyCanvasUnmount,\n      idNumber: props.idNumber,\n      isGenerating: props.isGenerating,\n      registerCanvasInteractions: props.registerCanvasInteractions,\n      resetInputLogic: props.resetInputLogic,\n      selectClearingMethod: this.clearCanvasOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, !props.isIdentifyBlock ? React.createElement(\"button\", {\n      disabled: props.isGenerating || props.constructionCompleted,\n      onClick: this.state.clearFunction,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, 'Clear Canvas') : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.state.clearFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, 'Clear Canvas'), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: props.identifyCanvasContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, 'Identify Drawing'))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jaqqen/ShaVas/frontend/src/components/CanvasBlock.js"],"names":["React","Component","MyCanvas","CanvasBlock","constructor","props","state","clearFunction","clearCanvasOnClick","bind","componentWillUnmount","console","log","idNumber","clearFunc","setState","render","isIdentifyBlock","canvasDimensions","constructionCompleted","getRootStateWhenMyCanvasUnmount","isGenerating","registerCanvasInteractions","resetInputLogic","identifyCanvasContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AACjDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiB,KAAKP,KAAL,CAAWQ,QAA5B,GAAuC,gBAAnD;AACD;;AAEDL,EAAAA,kBAAkB,CAACM,SAAD,EAAY;AAC5B,SAAKC,QAAL,CAAc;AACZR,MAAAA,aAAa,EAAEO;AADH,KAAd;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAMX,KAAK,GAAG,KAAKA,KAAnB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAWA,KAAK,CAACY,eAAN,GAAwB,aAAxB,GAAwCZ,KAAK,CAACQ,QAAzD,CADF,EAEE,oBAAC,QAAD;AACE,MAAA,WAAW,EAAER,KAAK,CAACa,gBADrB;AAEE,MAAA,qBAAqB,EAAEb,KAAK,CAACc,qBAF/B;AAGE,MAAA,+BAA+B,EAAEd,KAAK,CAACe,+BAHzC;AAIE,MAAA,QAAQ,EAAEf,KAAK,CAACQ,QAJlB;AAKE,MAAA,YAAY,EAAER,KAAK,CAACgB,YALtB;AAME,MAAA,0BAA0B,EAAEhB,KAAK,CAACiB,0BANpC;AAOE,MAAA,eAAe,EAAEjB,KAAK,CAACkB,eAPzB;AAQE,MAAA,oBAAoB,EAAE,KAAKf,kBAR7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAYE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACH,KAAK,CAACY,eAAP,GACC;AACE,MAAA,QAAQ,EAAEZ,KAAK,CAACgB,YAAN,IAAsBhB,KAAK,CAACc,qBADxC;AAEE,MAAA,OAAO,EAAE,KAAKb,KAAL,CAAWC,aAFtB;AAGE,MAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,cALH,CADD,GASC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,cADH,CADF,EAIE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAEF,KAAK,CAACmB,qBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,kBADH,CAJF,CAVJ,CAZF,CADF;AAmCD;;AAxDgD","sourcesContent":["import React, { Component } from \"react\";\nimport MyCanvas from \"../MyCanvas\";\n\nexport default class CanvasBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clearFunction: null,\n    };\n    this.clearCanvasOnClick = this.clearCanvasOnClick.bind(this);\n  }\n\n  componentWillUnmount() {\n    console.log('CanvasBlock ' + this.props.idNumber + ' has unmounted');\n  }\n\n  clearCanvasOnClick(clearFunc) {\n    this.setState({\n      clearFunction: clearFunc\n    });\n  }\n\n  render() {\n    const props = this.props;\n    return (\n      <div className=\"canvas-block-holder\">\n        <h2>Shape {props.isIdentifyBlock ? 'to identify' : props.idNumber}</h2>\n        <MyCanvas\n          _dimensions={props.canvasDimensions}\n          constructionCompleted={props.constructionCompleted}\n          getRootStateWhenMyCanvasUnmount={props.getRootStateWhenMyCanvasUnmount}\n          idNumber={props.idNumber}\n          isGenerating={props.isGenerating}\n          registerCanvasInteractions={props.registerCanvasInteractions}\n          resetInputLogic={props.resetInputLogic}\n          selectClearingMethod={this.clearCanvasOnClick}\n        />\n        <div className=\"button-container\">\n          {!props.isIdentifyBlock ?\n            <button\n              disabled={props.isGenerating || props.constructionCompleted}\n              onClick={this.state.clearFunction}\n              type='button'\n            >\n              {'Clear Canvas'}\n            </button>\n            :\n            <React.Fragment>\n              <button type='button' onClick={this.state.clearFunction}>\n                {'Clear Canvas'}\n              </button>\n              <button type='button' onClick={props.identifyCanvasContent}>\n                {'Identify Drawing'}\n              </button>\n            </React.Fragment>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}