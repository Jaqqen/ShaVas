{"ast":null,"code":"var _jsxFileName = \"/Users/jaqqen/ShaVas/frontend/src/components/IdentificationCanvas.js\";\nimport React, { Component } from 'react';\nexport default class IdentificationCanvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvasHeight: props._dimensions.h,\n      canvasWidth: props._dimensions.w,\n      idNumber: props.idNumber,\n      painting: false\n    };\n    this.canvasRef = React.createRef();\n    this.clearCanvas = this.clearCanvas.bind(this);\n  }\n\n  componentWillUnmount() {\n    console.log(\"good-bye\");\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMounted: true\n    });\n    const ctx = this.canvasRef.current.getContext(\"2d\"); // #### pre setup for drawing ####\n\n    ctx.lineWidth = 6;\n    ctx.lineCap = \"round\";\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, this.state.canvasWidth, this.state.canvasHeight); // #### when mouse is DOWN on CANVAS ####\n\n    this.canvasRef.current.addEventListener(\"mousedown\", e => this.mouseDownHandler(e, ctx)); // #### when mouse is UP on WINDOW ####\n\n    window.addEventListener(\"mouseup\", () => this.mouseUpHandler(ctx)); // #### when mouse is MOVING on CANVAS ####\n\n    this.canvasRef.current.addEventListener(\"mousemove\", e => this.mouseMoveHandler(e, ctx)); // #### passing the clearCanvas-function to the parent component ####\n\n    this.props.selectClearingMethod(this.clearCanvas);\n  }\n\n  mouseDownHandler(e, ctx) {\n    this.setState({\n      painting: true\n    });\n    this.draw(e, ctx);\n  }\n\n  mouseUpHandler(ctx) {\n    this.setState({\n      painting: false\n    });\n    ctx.beginPath();\n  }\n\n  mouseMoveHandler(e, ctx) {\n    this.draw(e, ctx);\n  }\n\n  draw(_event, context) {\n    if (!this.state.painting) return;\n    const rect = this.canvasRef.current.getBoundingClientRect();\n    context.lineTo(_event.clientX - rect.left, _event.clientY - rect.top);\n    context.stroke();\n    context.beginPath();\n    context.moveTo(_event.clientX - rect.left, _event.clientY - rect.top);\n  }\n\n  clearCanvas() {\n    const canvasContext = this.canvasRef.current.getContext(\"2d\");\n    canvasContext.clearRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n    canvasContext.fillStyle = \"white\";\n    canvasContext.fillRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: \"my-canvas\" + this.state.idNumber,\n      ref: this.canvasRef,\n      height: this.props._dimensions.h,\n      width: this.props._dimensions.w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jaqqen/ShaVas/frontend/src/components/IdentificationCanvas.js"],"names":["React","Component","IdentificationCanvas","constructor","props","state","canvasHeight","_dimensions","h","canvasWidth","w","idNumber","painting","canvasRef","createRef","clearCanvas","bind","componentWillUnmount","console","log","componentDidMount","setState","isMounted","ctx","current","getContext","lineWidth","lineCap","fillStyle","fillRect","addEventListener","e","mouseDownHandler","window","mouseUpHandler","mouseMoveHandler","selectClearingMethod","draw","beginPath","_event","context","rect","getBoundingClientRect","lineTo","clientX","left","clientY","top","stroke","moveTo","canvasContext","clearRect","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class IdentificationCanvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvasHeight: props._dimensions.h,\n      canvasWidth: props._dimensions.w,\n      idNumber: props.idNumber,\n      painting: false,\n    };\n    this.canvasRef = React.createRef();\n    this.clearCanvas = this.clearCanvas.bind(this);\n\n  }\n\n  componentWillUnmount() {\n    console.log(\"good-bye\")\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMounted: true,\n    });\n\n    const ctx = this.canvasRef.current.getContext(\"2d\");\n    // #### pre setup for drawing ####\n    ctx.lineWidth = 6;\n    ctx.lineCap = \"round\";\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n\n    // #### when mouse is DOWN on CANVAS ####\n    this.canvasRef.current.addEventListener(\"mousedown\",\n      e => this.mouseDownHandler(e, ctx));\n\n    // #### when mouse is UP on WINDOW ####\n    window.addEventListener(\"mouseup\", () => this.mouseUpHandler(ctx));\n\n    // #### when mouse is MOVING on CANVAS ####\n    this.canvasRef.current.addEventListener(\"mousemove\",\n      e => this.mouseMoveHandler(e, ctx));\n\n    // #### passing the clearCanvas-function to the parent component ####\n    this.props.selectClearingMethod(this.clearCanvas);\n  }\n\n  mouseDownHandler(e, ctx) {\n    this.setState({\n      painting: true,\n    });\n    this.draw(e, ctx);\n  }\n\n  mouseUpHandler(ctx) {\n    this.setState({\n      painting: false,\n    });\n    ctx.beginPath();\n  }\n\n  mouseMoveHandler(e, ctx) {\n    this.draw(e, ctx);\n  }\n\n  draw(_event, context) {\n    if (!this.state.painting) return;\n    const rect = this.canvasRef.current.getBoundingClientRect();\n    context.lineTo(_event.clientX - rect.left, _event.clientY - rect.top);\n    context.stroke();\n    context.beginPath();\n    context.moveTo(_event.clientX - rect.left, _event.clientY - rect.top);\n  }\n\n  clearCanvas() {\n    const canvasContext = this.canvasRef.current.getContext(\"2d\");\n    canvasContext.clearRect(\n      0,\n      0,\n      this.state.canvasWidth,\n      this.state.canvasHeight\n    );\n    canvasContext.fillStyle = \"white\";\n    canvasContext.fillRect(\n      0,\n      0,\n      this.state.canvasWidth,\n      this.state.canvasHeight\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <canvas\n          id={\"my-canvas\" + this.state.idNumber}\n          ref={this.canvasRef}\n          height={this.props._dimensions.h}\n          width={this.props._dimensions.w}\n        />\n      </React.Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}