{"ast":null,"code":"var _jsxFileName = \"/Users/jaqqen/ShaVas/frontend/src/components/CanvasBlock.js\";\nimport React, { Component } from \"react\";\nimport MyCanvas from \"./MyCanvas\"; // import { BasicButton } from './BasicButton';\n\nexport default class CanvasBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clearFunction: null,\n      setDrawingFunction: null,\n      setIdentifyerDrawing: props.setIdentifyerDrawing,\n      setterButtonIdName: \"canvas-setter\"\n    };\n    this.clearCanvasOnClick = this.clearCanvasOnClick.bind(this);\n    this.setDrawingOnClick = this.setDrawingOnClick.bind(this);\n  }\n\n  componentWillUnmount() {\n    console.log('CanvasBlock ' + this.props.idNumber + ' has unmounted');\n  }\n\n  clearCanvasOnClick(clearFunc) {\n    this.setState({\n      clearFunction: clearFunc\n    });\n  }\n\n  setDrawingOnClick(setDrawingFunc) {\n    this.setState({\n      setDrawingFunction: setDrawingFunc\n    });\n  }\n\n  render() {\n    const props = this.props;\n    return React.createElement(\"div\", {\n      className: \"canvas-block-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Shape \", props.isIdentifyBlock ? 'to identify' : props.idNumber), React.createElement(MyCanvas, {\n      _dimensions: props.canvasDimensions,\n      setIdentifyerDrawing: this.state.setIdentifyerDrawing,\n      canvasSetterButtonIdName: this.state.setterButtonIdName,\n      isIdentifyBlock: props.isIdentifyBlock,\n      idNumber: props.idNumber,\n      registerCanvasInteractions: props.registerCanvasInteractions,\n      selectClearingMethod: this.clearCanvasOnClick,\n      selectSetDrawingMethod: this.setDrawingOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, !props.isIdentifyBlock ? React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.state.clearFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Clear Canvas\") : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.state.clearFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Clear Canvas\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: props.identifyDrawing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Identify Drawing\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jaqqen/ShaVas/frontend/src/components/CanvasBlock.js"],"names":["React","Component","MyCanvas","CanvasBlock","constructor","props","state","clearFunction","setDrawingFunction","setIdentifyerDrawing","setterButtonIdName","clearCanvasOnClick","bind","setDrawingOnClick","componentWillUnmount","console","log","idNumber","clearFunc","setState","setDrawingFunc","render","isIdentifyBlock","canvasDimensions","registerCanvasInteractions","identifyDrawing"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AAEA,eAAe,MAAMC,WAAN,SAA0BF,SAA1B,CAAoC;AACjDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,aAAa,EAAE,IADJ;AAEXC,MAAAA,kBAAkB,EAAE,IAFT;AAGXC,MAAAA,oBAAoB,EAAEJ,KAAK,CAACI,oBAHjB;AAIXC,MAAAA,kBAAkB,EAAE;AAJT,KAAb;AAMA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAEDE,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiB,KAAKX,KAAL,CAAWY,QAA5B,GAAuC,gBAAnD;AACD;;AAEDN,EAAAA,kBAAkB,CAACO,SAAD,EAAY;AAC5B,SAAKC,QAAL,CAAc;AACZZ,MAAAA,aAAa,EAAEW;AADH,KAAd;AAGD;;AAEDL,EAAAA,iBAAiB,CAACO,cAAD,EAAiB;AAChC,SAAKD,QAAL,CAAc;AACZX,MAAAA,kBAAkB,EAAEY;AADR,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMhB,KAAK,GAAG,KAAKA,KAAnB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAWA,KAAK,CAACiB,eAAN,GAAwB,aAAxB,GAAwCjB,KAAK,CAACY,QAAzD,CADF,EAEE,oBAAC,QAAD;AACE,MAAA,WAAW,EAAEZ,KAAK,CAACkB,gBADrB;AAEE,MAAA,oBAAoB,EAAE,KAAKjB,KAAL,CAAWG,oBAFnC;AAGE,MAAA,wBAAwB,EAAE,KAAKH,KAAL,CAAWI,kBAHvC;AAIE,MAAA,eAAe,EAAEL,KAAK,CAACiB,eAJzB;AAKE,MAAA,QAAQ,EAAEjB,KAAK,CAACY,QALlB;AAME,MAAA,0BAA0B,EAAEZ,KAAK,CAACmB,0BANpC;AAOE,MAAA,oBAAoB,EAAE,KAAKb,kBAP7B;AAQE,MAAA,sBAAsB,EAAE,KAAKE,iBAR/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAYE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACR,KAAK,CAACiB,eAAP,GACC;AAAQ,MAAA,IAAI,EAAE,QAAd;AAAwB,MAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWC,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,cADH,CADD,GAKC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,IAAI,EAAE,QAAd;AAAwB,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,cADH,CADF,EAIE;AAAQ,MAAA,IAAI,EAAE,QAAd;AAAwB,MAAA,OAAO,EAAEF,KAAK,CAACoB,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,kBADH,CAJF,CANJ,CAZF,CADF;AAiCD;;AAhEgD","sourcesContent":["import React, { Component } from \"react\";\nimport MyCanvas from \"./MyCanvas\";\n// import { BasicButton } from './BasicButton';\n\nexport default class CanvasBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clearFunction: null,\n      setDrawingFunction: null,\n      setIdentifyerDrawing: props.setIdentifyerDrawing,\n      setterButtonIdName: \"canvas-setter\",\n    };\n    this.clearCanvasOnClick = this.clearCanvasOnClick.bind(this);\n    this.setDrawingOnClick = this.setDrawingOnClick.bind(this);\n  }\n\n  componentWillUnmount() {\n    console.log('CanvasBlock ' + this.props.idNumber + ' has unmounted');\n  }\n\n  clearCanvasOnClick(clearFunc) {\n    this.setState({\n      clearFunction: clearFunc\n    });\n  }\n\n  setDrawingOnClick(setDrawingFunc) {\n    this.setState({\n      setDrawingFunction: setDrawingFunc\n    });\n  }\n\n  render() {\n    const props = this.props;\n    return (\n      <div className=\"canvas-block-holder\">\n        <h2>Shape {props.isIdentifyBlock ? 'to identify' : props.idNumber}</h2>\n        <MyCanvas\n          _dimensions={props.canvasDimensions}\n          setIdentifyerDrawing={this.state.setIdentifyerDrawing}\n          canvasSetterButtonIdName={this.state.setterButtonIdName}\n          isIdentifyBlock={props.isIdentifyBlock}\n          idNumber={props.idNumber}\n          registerCanvasInteractions={props.registerCanvasInteractions}\n          selectClearingMethod={this.clearCanvasOnClick}\n          selectSetDrawingMethod={this.setDrawingOnClick}\n        />\n        <div className=\"button-container\">\n          {!props.isIdentifyBlock ?\n            <button type={\"button\"} onClick={this.state.clearFunction}>\n              {\"Clear Canvas\"}\n            </button>\n            :\n            <React.Fragment>\n              <button type={\"button\"} onClick={this.state.clearFunction}>\n                {\"Clear Canvas\"}\n              </button>\n              <button type={\"button\"} onClick={props.identifyDrawing}>\n                {\"Identify Drawing\"}\n              </button>\n            </React.Fragment>\n          }\n        </div>\n\n      </div>\n\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}