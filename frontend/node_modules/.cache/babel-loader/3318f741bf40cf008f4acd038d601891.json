{"ast":null,"code":"var _jsxFileName = \"/Users/jaqqen/ShaVas/frontend/src/components/IdentificationCanvas.js\";\nimport React, { Component } from 'react';\nexport default class IdentificationCanvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvasHeight: props._dimensions.h,\n      canvasWidth: props._dimensions.w,\n      painting: false\n    };\n    this.canvasRef = React.createRef();\n    this.ctx = null;\n    this.clearCanvas = this.clearCanvas.bind(this);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"mouseup\", this.mouseUpHandler);\n    console.log('unmount IdentificationCanvas');\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMounted: true\n    }); // const ctx = this.canvasRef.current.getContext(\"2d\");\n    // // #### pre setup for drawing ####\n    // ctx.lineWidth = 6;\n    // ctx.lineCap = \"round\";\n    // ctx.fillStyle = \"white\";\n    // ctx.fillRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n\n    this.ctx = this.canvasRef.current.getContext('2d');\n    this.ctx.lineWidth = 6;\n    this.ctx.lineCap = \"round\";\n    this.ctx.fillStyle = \"white\";\n    this.ctx.fillRect(0, 0, this.state.canvasWidth, this.state.canvasHeight); // #### when mouse is DOWN on CANVAS ####\n\n    this.canvasRef.current.addEventListener(\"mousedown\", e => this.mouseDownHandler(e)); // #### when mouse is UP on WINDOW ####\n\n    window.addEventListener(\"mouseup\", this.mouseUpHandler.bind(this)); // #### when mouse is MOVING on CANVAS ####\n\n    this.canvasRef.current.addEventListener(\"mousemove\", e => this.mouseMoveHandler(e)); // #### passing the clearCanvas-function to the parent component ####\n\n    this.props.selectClearingMethod(this.clearCanvas);\n  }\n\n  mouseDownHandler(e) {\n    this.setState({\n      painting: true\n    });\n    this.draw(e);\n  }\n\n  mouseUpHandler() {\n    this.setState({\n      painting: false\n    });\n    this.ctx.beginPath();\n  }\n\n  mouseMoveHandler(e) {\n    this.draw(e);\n  }\n\n  draw(_event) {\n    if (!this.state.painting) return;\n    const rect = this.canvasRef.current.getBoundingClientRect();\n    this.ctx.lineTo(_event.clientX - rect.left, _event.clientY - rect.top);\n    this.ctx.stroke();\n    this.ctx.beginPath();\n    this.ctx.moveTo(_event.clientX - rect.left, _event.clientY - rect.top);\n  }\n\n  clearCanvas() {\n    const canvasContext = this.canvasRef.current.getContext(\"2d\");\n    canvasContext.clearRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n    canvasContext.fillStyle = \"white\";\n    canvasContext.fillRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n  }\n\n  render() {\n    const props = this.props;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: props._id,\n      ref: this.canvasRef,\n      height: props._dimensions.h,\n      width: props._dimensions.w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jaqqen/ShaVas/frontend/src/components/IdentificationCanvas.js"],"names":["React","Component","IdentificationCanvas","constructor","props","state","canvasHeight","_dimensions","h","canvasWidth","w","painting","canvasRef","createRef","ctx","clearCanvas","bind","componentWillUnmount","window","removeEventListener","mouseUpHandler","console","log","componentDidMount","setState","isMounted","current","getContext","lineWidth","lineCap","fillStyle","fillRect","addEventListener","e","mouseDownHandler","mouseMoveHandler","selectClearingMethod","draw","beginPath","_event","rect","getBoundingClientRect","lineTo","clientX","left","clientY","top","stroke","moveTo","canvasContext","clearRect","render","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class IdentificationCanvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvasHeight: props._dimensions.h,\n      canvasWidth: props._dimensions.w,\n      painting: false,\n    };\n    this.canvasRef = React.createRef();\n    this.ctx = null;\n    this.clearCanvas = this.clearCanvas.bind(this);\n\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"mouseup\", this.mouseUpHandler);\n    console.log('unmount IdentificationCanvas');\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMounted: true,\n    });\n\n    // const ctx = this.canvasRef.current.getContext(\"2d\");\n    // // #### pre setup for drawing ####\n    // ctx.lineWidth = 6;\n    // ctx.lineCap = \"round\";\n    // ctx.fillStyle = \"white\";\n    // ctx.fillRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n\n    this.ctx = this.canvasRef.current.getContext('2d');\n    this.ctx.lineWidth = 6;\n    this.ctx.lineCap = \"round\";\n    this.ctx.fillStyle = \"white\";\n    this.ctx.fillRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n\n    // #### when mouse is DOWN on CANVAS ####\n    this.canvasRef.current.addEventListener(\"mousedown\",\n      e => this.mouseDownHandler(e));\n\n    // #### when mouse is UP on WINDOW ####\n    window.addEventListener(\"mouseup\", this.mouseUpHandler.bind(this));\n\n    // #### when mouse is MOVING on CANVAS ####\n    this.canvasRef.current.addEventListener(\"mousemove\",\n      e => this.mouseMoveHandler(e));\n\n    // #### passing the clearCanvas-function to the parent component ####\n    this.props.selectClearingMethod(this.clearCanvas);\n  }\n\n  mouseDownHandler(e) {\n    this.setState({\n      painting: true,\n    });\n    this.draw(e);\n  }\n\n  mouseUpHandler() {\n    this.setState({\n      painting: false,\n    });\n    this.ctx.beginPath();\n  }\n\n  mouseMoveHandler(e) {\n    this.draw(e);\n  }\n\n  draw(_event) {\n    if (!this.state.painting) return;\n    const rect = this.canvasRef.current.getBoundingClientRect();\n    this.ctx.lineTo(_event.clientX - rect.left, _event.clientY - rect.top);\n    this.ctx.stroke();\n    this.ctx.beginPath();\n    this.ctx.moveTo(_event.clientX - rect.left, _event.clientY - rect.top);\n  }\n\n  clearCanvas() {\n    const canvasContext = this.canvasRef.current.getContext(\"2d\");\n    canvasContext.clearRect(\n      0,\n      0,\n      this.state.canvasWidth,\n      this.state.canvasHeight\n    );\n    canvasContext.fillStyle = \"white\";\n    canvasContext.fillRect(\n      0,\n      0,\n      this.state.canvasWidth,\n      this.state.canvasHeight\n    );\n  }\n\n  render() {\n    const props = this.props;\n\n    return (\n      <React.Fragment>\n        <canvas\n          id={props._id}\n          ref={this.canvasRef}\n          height={props._dimensions.h}\n          width={props._dimensions.w}\n        />\n      </React.Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}