{"ast":null,"code":"var _jsxFileName = \"/Users/jaqqen/_Bachelor_container/_Testing_container/test_react_only/geomvas/src/components/BasicButton.js\";\nimport React, { Component } from \"react\";\nexport default class BasicButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttonName: props.buttonName,\n      buttonType: props.buttonType,\n      aTagSetter: props.aTagSetter,\n      idNumberForImage: props.idNumberOfCanvas\n    };\n    this.setCanvasDrawingRef = React.createRef();\n  } // shouldComponentUpdate(nextProps, nextState) {\n  //   if (nextProps.onClick && nextState.aTagSetter) {\n  //     this.setCanvasDrawingRef.current.addEventListener(\n  //       \"click\",\n  //       nextProps.onClick\n  //     );\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n\n\n  render() {\n    const _this$state = this.state,\n          buttonName = _this$state.buttonName,\n          buttonType = _this$state.buttonType,\n          aTagSetter = _this$state.aTagSetter;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, aTagSetter ? // eslint-disable-next-line jsx-a11y/anchor-is-valid\n    // download={\"image_\" + idNumberForImage + \".png\"}\n    // <a\n    //   href=\"#\"\n    //   id={this.props.buttonId + idNumberForImage}\n    //   ref={this.setCanvasDrawingRef}\n    // >\n    //   <span>{buttonName}</span>\n    // </a>\n    React.createElement(\"button\", {\n      type: buttonType,\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, buttonName) : React.createElement(\"button\", {\n      type: buttonType,\n      onClick: () => this.props.onClick(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, buttonName));\n  }\n\n}","map":{"version":3,"sources":["/Users/jaqqen/_Bachelor_container/_Testing_container/test_react_only/geomvas/src/components/BasicButton.js"],"names":["React","Component","BasicButton","constructor","props","state","buttonName","buttonType","aTagSetter","idNumberForImage","idNumberOfCanvas","setCanvasDrawingRef","createRef","render","onClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,WAAN,SAA0BD,SAA1B,CAAoC;AACjDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAEF,KAAK,CAACE,UADP;AAEXC,MAAAA,UAAU,EAAEH,KAAK,CAACG,UAFP;AAGXC,MAAAA,UAAU,EAAEJ,KAAK,CAACI,UAHP;AAIXC,MAAAA,gBAAgB,EAAEL,KAAK,CAACM;AAJb,KAAb;AAMA,SAAKC,mBAAL,GAA2BX,KAAK,CAACY,SAAN,EAA3B;AACD,GAVgD,CAYjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AAAA,wBACwC,KAAKR,KAD7C;AAAA,UACCC,UADD,eACCA,UADD;AAAA,UACaC,UADb,eACaA,UADb;AAAA,UACyBC,UADzB,eACyBA,UADzB;AAEP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,UAAU,GACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAQ,MAAA,IAAI,EAAED,UAAd;AAA0B,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWU,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,UADH,CAVS,GAcT;AAAQ,MAAA,IAAI,EAAEC,UAAd;AAA0B,MAAA,OAAO,EAAE,MAAM,KAAKH,KAAL,CAAWU,OAAX,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGR,UADH,CAfJ,CADF;AAsBD;;AAhDgD","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class BasicButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttonName: props.buttonName,\n      buttonType: props.buttonType,\n      aTagSetter: props.aTagSetter,\n      idNumberForImage: props.idNumberOfCanvas\n    };\n    this.setCanvasDrawingRef = React.createRef();\n  }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   if (nextProps.onClick && nextState.aTagSetter) {\n  //     this.setCanvasDrawingRef.current.addEventListener(\n  //       \"click\",\n  //       nextProps.onClick\n  //     );\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // }\n\n  render() {\n    const { buttonName, buttonType, aTagSetter } = this.state;\n    return (\n      <React.Fragment>\n        {aTagSetter ? (\n          // eslint-disable-next-line jsx-a11y/anchor-is-valid\n          // download={\"image_\" + idNumberForImage + \".png\"}\n          // <a\n          //   href=\"#\"\n          //   id={this.props.buttonId + idNumberForImage}\n          //   ref={this.setCanvasDrawingRef}\n          // >\n          //   <span>{buttonName}</span>\n          // </a>\n          <button type={buttonType} onClick={this.props.onClick}>\n            {buttonName}\n          </button>\n        ) : (\n          <button type={buttonType} onClick={() => this.props.onClick()}>\n            {buttonName}\n          </button>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}