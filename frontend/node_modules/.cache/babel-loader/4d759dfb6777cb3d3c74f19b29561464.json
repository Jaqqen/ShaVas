{"ast":null,"code":"var _jsxFileName = \"/Users/jaqqen/ShaVas/frontend/src/components/IdentificationCanvas.js\";\nimport React, { Component } from 'react';\nexport default class IdentificationCanvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvasHeight: props._dimensions.h,\n      canvasWidth: props._dimensions.w,\n      painting: false\n    };\n    this.canvasRef = React.createRef();\n    console.log(this.canvasRef.current.getContext(\"2d\"));\n    this.clearCanvas = this.clearCanvas.bind(this);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"mouseup\", this.mouseUpHandler);\n    console.log('unmount IdentificationCanvas');\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMounted: true\n    });\n    const ctx = this.canvasRef.current.getContext(\"2d\"); // #### pre setup for drawing ####\n\n    ctx.lineWidth = 6;\n    ctx.lineCap = \"round\";\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, this.state.canvasWidth, this.state.canvasHeight); // #### when mouse is DOWN on CANVAS ####\n\n    this.canvasRef.current.addEventListener(\"mousedown\", e => this.mouseDownHandler(e, ctx)); // #### when mouse is UP on WINDOW ####\n\n    this.canvasRef.current.addEventListener(\"mouseup\", () => this.mouseUpHandler(ctx)); // #### when mouse is MOVING on CANVAS ####\n\n    this.canvasRef.current.addEventListener(\"mousemove\", e => this.mouseMoveHandler(e, ctx)); // #### passing the clearCanvas-function to the parent component ####\n\n    this.props.selectClearingMethod(this.clearCanvas);\n  }\n\n  mouseDownHandler(e, ctx) {\n    this.setState({\n      painting: true\n    });\n    this.draw(e, ctx);\n  }\n\n  mouseUpHandler(ctx) {\n    this.setState({\n      painting: false\n    });\n    ctx.beginPath();\n  }\n\n  mouseMoveHandler(e, ctx) {\n    this.draw(e, ctx);\n  }\n\n  draw(_event, context) {\n    if (!this.state.painting) return;\n    const rect = this.canvasRef.current.getBoundingClientRect();\n    context.lineTo(_event.clientX - rect.left, _event.clientY - rect.top);\n    context.stroke();\n    context.beginPath();\n    context.moveTo(_event.clientX - rect.left, _event.clientY - rect.top);\n  }\n\n  clearCanvas() {\n    const canvasContext = this.canvasRef.current.getContext(\"2d\");\n    canvasContext.clearRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n    canvasContext.fillStyle = \"white\";\n    canvasContext.fillRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n  }\n\n  render() {\n    const props = this.props;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      id: props._id,\n      ref: this.canvasRef,\n      height: props._dimensions.h,\n      width: props._dimensions.w,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/jaqqen/ShaVas/frontend/src/components/IdentificationCanvas.js"],"names":["React","Component","IdentificationCanvas","constructor","props","state","canvasHeight","_dimensions","h","canvasWidth","w","painting","canvasRef","createRef","console","log","current","getContext","clearCanvas","bind","componentWillUnmount","window","removeEventListener","mouseUpHandler","componentDidMount","setState","isMounted","ctx","lineWidth","lineCap","fillStyle","fillRect","addEventListener","e","mouseDownHandler","mouseMoveHandler","selectClearingMethod","draw","beginPath","_event","context","rect","getBoundingClientRect","lineTo","clientX","left","clientY","top","stroke","moveTo","canvasContext","clearRect","render","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nexport default class IdentificationCanvas extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvasHeight: props._dimensions.h,\n      canvasWidth: props._dimensions.w,\n      painting: false,\n    };\n    this.canvasRef = React.createRef();\n    console.log(this.canvasRef.current.getContext(\"2d\"));\n    this.clearCanvas = this.clearCanvas.bind(this);\n\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"mouseup\", this.mouseUpHandler);\n    console.log('unmount IdentificationCanvas');\n  }\n\n  componentDidMount() {\n    this.setState({\n      isMounted: true,\n    });\n\n    const ctx = this.canvasRef.current.getContext(\"2d\");\n    // #### pre setup for drawing ####\n    ctx.lineWidth = 6;\n    ctx.lineCap = \"round\";\n    ctx.fillStyle = \"white\";\n    ctx.fillRect(0, 0, this.state.canvasWidth, this.state.canvasHeight);\n\n    // #### when mouse is DOWN on CANVAS ####\n    this.canvasRef.current.addEventListener(\"mousedown\",\n      e => this.mouseDownHandler(e, ctx));\n\n    // #### when mouse is UP on WINDOW ####\n    this.canvasRef.current.addEventListener(\"mouseup\", () => this.mouseUpHandler(ctx));\n\n    // #### when mouse is MOVING on CANVAS ####\n    this.canvasRef.current.addEventListener(\"mousemove\",\n      e => this.mouseMoveHandler(e, ctx));\n\n    // #### passing the clearCanvas-function to the parent component ####\n    this.props.selectClearingMethod(this.clearCanvas);\n  }\n\n  mouseDownHandler(e, ctx) {\n    this.setState({\n      painting: true,\n    });\n    this.draw(e, ctx);\n  }\n\n  mouseUpHandler(ctx) {\n    this.setState({\n      painting: false,\n    });\n    ctx.beginPath();\n  }\n\n  mouseMoveHandler(e, ctx) {\n    this.draw(e, ctx);\n  }\n\n  draw(_event, context) {\n    if (!this.state.painting) return;\n    const rect = this.canvasRef.current.getBoundingClientRect();\n    context.lineTo(_event.clientX - rect.left, _event.clientY - rect.top);\n    context.stroke();\n    context.beginPath();\n    context.moveTo(_event.clientX - rect.left, _event.clientY - rect.top);\n  }\n\n  clearCanvas() {\n    const canvasContext = this.canvasRef.current.getContext(\"2d\");\n    canvasContext.clearRect(\n      0,\n      0,\n      this.state.canvasWidth,\n      this.state.canvasHeight\n    );\n    canvasContext.fillStyle = \"white\";\n    canvasContext.fillRect(\n      0,\n      0,\n      this.state.canvasWidth,\n      this.state.canvasHeight\n    );\n  }\n\n  render() {\n    const props = this.props;\n\n    return (\n      <React.Fragment>\n        <canvas\n          id={props._id}\n          ref={this.canvasRef}\n          height={props._dimensions.h}\n          width={props._dimensions.w}\n        />\n      </React.Fragment>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}