{"ast":null,"code":"var _jsxFileName = \"/Users/jaqqen/ShaVas/frontend/src/components/CanvasBlock.js\";\nimport React, { Component } from \"react\";\nimport MyCanvas from \"./MyCanvas\";\nimport { BasicButton } from './BasicButton';\nexport default class CanvasBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appendDrawingToState: props.appendDrawingToState,\n      clearFunction: null,\n      setDrawingFunction: null,\n      setIdentifyerDrawing: props.setIdentifyerDrawing,\n      setterButtonIdName: \"canvas-setter\"\n    };\n    this.clearCanvasOnClick = this.clearCanvasOnClick.bind(this);\n    this.setDrawingOnClick = this.setDrawingOnClick.bind(this);\n  }\n\n  componentWillUnmount() {\n    console.log('CanvasBlock ' + this.props.idNumber + ' has unmounted');\n  }\n\n  clearCanvasOnClick(clearFunc) {\n    this.setState({\n      clearFunction: clearFunc\n    });\n  }\n\n  setDrawingOnClick(setDrawingFunc) {\n    this.setState({\n      setDrawingFunction: setDrawingFunc\n    });\n  }\n\n  render() {\n    console.log(this.props.canvasDimensions);\n    return React.createElement(\"div\", {\n      className: \"canvas-block-holder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Shape \", this.props.identifyer ? 'to identify' : this.props.idNumber), React.createElement(MyCanvas, {\n      _dimensions: this.props.canvasDimensions,\n      _height: 300,\n      _width: 400,\n      addElementToCanvasBlockArray: this.state.appendDrawingToState,\n      setIdentifyerDrawing: this.state.setIdentifyerDrawing,\n      canvasSetterButtonIdName: this.state.setterButtonIdName,\n      identifyer: this.props.identifyer,\n      idNumber: this.props.idNumber,\n      selectClearingMethod: this.clearCanvasOnClick,\n      selectSetDrawingMethod: this.setDrawingOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"button-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.isNotIdentifyBlock ? React.createElement(\"button\", {\n      disabled: false,\n      type: \"button\",\n      onClick: this.state.clearFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Clear Canvas\") : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: false,\n      type: \"button\",\n      onClick: this.state.clearFunction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Clear Canvas\"), React.createElement(\"button\", {\n      disabled: false,\n      type: \"button\",\n      onClick: this.props.identifyDrawing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Identify Drawing\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jaqqen/ShaVas/frontend/src/components/CanvasBlock.js"],"names":["React","Component","MyCanvas","BasicButton","CanvasBlock","constructor","props","state","appendDrawingToState","clearFunction","setDrawingFunction","setIdentifyerDrawing","setterButtonIdName","clearCanvasOnClick","bind","setDrawingOnClick","componentWillUnmount","console","log","idNumber","clearFunc","setState","setDrawingFunc","render","canvasDimensions","identifyer","isNotIdentifyBlock","identifyDrawing"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,eAAe,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AACjDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,oBAAoB,EAAEF,KAAK,CAACE,oBADjB;AAEXC,MAAAA,aAAa,EAAE,IAFJ;AAGXC,MAAAA,kBAAkB,EAAE,IAHT;AAIXC,MAAAA,oBAAoB,EAAEL,KAAK,CAACK,oBAJjB;AAKXC,MAAAA,kBAAkB,EAAE;AALT,KAAb;AAOA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAEDE,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiB,KAAKZ,KAAL,CAAWa,QAA5B,GAAuC,gBAAnD;AACD;;AAEDN,EAAAA,kBAAkB,CAACO,SAAD,EAAY;AAC5B,SAAKC,QAAL,CAAc;AACZZ,MAAAA,aAAa,EAAEW;AADH,KAAd;AAGD;;AAEDL,EAAAA,iBAAiB,CAACO,cAAD,EAAiB;AAChC,SAAKD,QAAL,CAAc;AACZX,MAAAA,kBAAkB,EAAEY;AADR,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACPN,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWkB,gBAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAW,KAAKlB,KAAL,CAAWmB,UAAX,GAAwB,aAAxB,GAAwC,KAAKnB,KAAL,CAAWa,QAA9D,CADF,EAEE,oBAAC,QAAD;AACE,MAAA,WAAW,EAAE,KAAKb,KAAL,CAAWkB,gBAD1B;AAEE,MAAA,OAAO,EAAE,GAFX;AAGE,MAAA,MAAM,EAAE,GAHV;AAIE,MAAA,4BAA4B,EAAE,KAAKjB,KAAL,CAAWC,oBAJ3C;AAKE,MAAA,oBAAoB,EAAE,KAAKD,KAAL,CAAWI,oBALnC;AAME,MAAA,wBAAwB,EAAE,KAAKJ,KAAL,CAAWK,kBANvC;AAOE,MAAA,UAAU,EAAE,KAAKN,KAAL,CAAWmB,UAPzB;AAQE,MAAA,QAAQ,EAAE,KAAKnB,KAAL,CAAWa,QARvB;AASE,MAAA,oBAAoB,EAAE,KAAKN,kBAT7B;AAUE,MAAA,sBAAsB,EAAE,KAAKE,iBAV/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAcE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWoB,kBAAX,GACC;AAAQ,MAAA,QAAQ,EAAE,KAAlB;AAAyB,MAAA,IAAI,EAAE,QAA/B;AAAyC,MAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWE,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,cADH,CADD,GAKC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,QAAQ,EAAE,KAAlB;AAAyB,MAAA,IAAI,EAAE,QAA/B;AAAyC,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,aAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,cADH,CADF,EAIE;AAAQ,MAAA,QAAQ,EAAE,KAAlB;AAAyB,MAAA,IAAI,EAAE,QAA/B;AAAyC,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWqB,eAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,kBADH,CAJF,CANJ,CAdF,CADF;AAmCD;;AAnEgD","sourcesContent":["import React, { Component } from \"react\";\nimport MyCanvas from \"./MyCanvas\";\nimport { BasicButton } from './BasicButton';\n\nexport default class CanvasBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appendDrawingToState: props.appendDrawingToState,\n      clearFunction: null,\n      setDrawingFunction: null,\n      setIdentifyerDrawing: props.setIdentifyerDrawing,\n      setterButtonIdName: \"canvas-setter\",\n    };\n    this.clearCanvasOnClick = this.clearCanvasOnClick.bind(this);\n    this.setDrawingOnClick = this.setDrawingOnClick.bind(this);\n  }\n\n  componentWillUnmount() {\n    console.log('CanvasBlock ' + this.props.idNumber + ' has unmounted');\n  }\n\n  clearCanvasOnClick(clearFunc) {\n    this.setState({\n      clearFunction: clearFunc\n    });\n  }\n\n  setDrawingOnClick(setDrawingFunc) {\n    this.setState({\n      setDrawingFunction: setDrawingFunc\n    });\n  }\n\n  render() {\n    console.log(this.props.canvasDimensions);\n    return (\n      <div className=\"canvas-block-holder\">\n        <h2>Shape {this.props.identifyer ? 'to identify' : this.props.idNumber}</h2>\n        <MyCanvas\n          _dimensions={this.props.canvasDimensions}\n          _height={300}\n          _width={400}\n          addElementToCanvasBlockArray={this.state.appendDrawingToState}\n          setIdentifyerDrawing={this.state.setIdentifyerDrawing}\n          canvasSetterButtonIdName={this.state.setterButtonIdName}\n          identifyer={this.props.identifyer}\n          idNumber={this.props.idNumber}\n          selectClearingMethod={this.clearCanvasOnClick}\n          selectSetDrawingMethod={this.setDrawingOnClick}\n        />\n        <div className=\"button-container\">\n          {this.props.isNotIdentifyBlock ?\n            <button disabled={false} type={\"button\"} onClick={this.state.clearFunction}>\n              {\"Clear Canvas\"}\n            </button>\n            :\n            <React.Fragment>\n              <button disabled={false} type={\"button\"} onClick={this.state.clearFunction}>\n                {\"Clear Canvas\"}\n              </button>\n              <button disabled={false} type={\"button\"} onClick={this.props.identifyDrawing}>\n                {\"Identify Drawing\"}\n              </button>\n            </React.Fragment>\n          }\n        </div>\n\n      </div>\n\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}